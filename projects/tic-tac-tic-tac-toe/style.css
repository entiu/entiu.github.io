* {
  margin: 0;
  padding: 0;
  font-family: Helvetica, Arial, sans-serif;
}

body {
  --clr-O: hsl(219, 44%, 47%);
  --clr-X: hsl(338, 64%, 55%);
  --shadow: 0 1px 1px hsla(0, 0%, 0%, 0.05),
            0 2px 2px hsla(0, 0%, 0%, 0.05),
            0 4px 4px hsla(0, 0%, 0%, 0.05),
            0 8px 6px hsla(0, 0%, 0%, 0.05);
	--shadow-lg:  0 4px 4px hsla(0, 0%, 0%, 0.05),
                0 8px 8px hsla(0, 0%, 0%, 0.05),
                0 14px 14px hsla(0, 0%, 0%, 0.05),
                0 24px 24px hsla(0, 0%, 0%, 0.05);
  background-color: hsl(0, 0%, 50%);
  height: 100vh;
  width: 100vw;
}

.outer-container {
  align-items: flex-end;
  background-color: hsl(0, 0%, 100%);
  border-radius: 24px;
  box-shadow: var(--shadow);
  box-shadow: var(--shadow-lg);
  display: flex;
  flex-direction: column;
  gap: 8px;
  left: 50%;
  padding: 16px;
  perspective: 65.5cm;
  position: relative;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-style: preserve-3d;
  width: min(800px, 90%);
}

.container {
  background-color: hsl(0, 0%, 100%);
  border: 2px hsl(0, 0%, 20%) solid;
  border-radius: 8px;
  box-sizing: border-box;
  overflow: hidden;
  position: relative;
  width: 100%;
}

.blockers {
  height: 100%;
  opacity: .15;
  width: 100%;
}

.blocker {
  background: hsl(0, 0%, 20%);
  cursor: not-allowed;
  position: absolute;
  transition: all .75s cubic-bezier(0.63, 0, 0, 1);
}

.blocker.cell-blocker {
  height: calc(100% / 3);
  transform: scale(0);
  width: calc(100% / 3);
}

.blocker.cell-blocker.scaleX {
  animation: scaleX .125s ease forwards;
}

.blocker.cell-blocker.scaleY {
  animation: scaleY .125s ease forwards;
}

.blocker.top {
  height: 0%;
  top: 0;
  width: 100%;
}

.blocker.right {
  height: 100%;
  right: 0;
  transition-delay: 25ms;
  width: 0%;
}

.blocker.bottom {
  bottom: 0;
  height: 0%;
  transition-delay: 50ms;
  width: 100%;
}

.blocker.left {
  height: 100%;
  left: 0;
  transition-delay: 75ms;
  width: 0%;
}

.board {
  background: url('img/board-cut.svg') center center / cover no-repeat;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
}

.main-board {
  aspect-ratio: 1;
  margin: 0 auto;
  /* position: relative;
  top: -100%; */
  transition: backdrop-filter .5s ease-in;
  width: 100%;
}

.main-board.x-up {
  --current-sign-url: url(img/X.svg);
}

.main-board.o-up {
  --current-sign-url: url(img/O.svg);
}

.outer-box {
  align-items: center;
  display: flex;
  justify-content: center;
}

.inner-board {
  height: 100%;
  width: 100%;
  transition: filter .5s ease-in;
}

.inner-box {
  align-items: center;
  border-radius: 4px;
  cursor: pointer;
  display: flex;
  justify-content: center;
}

.inner-box:not(.marked):hover {
  background: var(--current-sign-url) center / 70% no-repeat; /* hsla(237, 24%, 83%, 1); */
  filter: opacity(.3);
}

.inner-box.marked {
  cursor: not-allowed;
}

.inner-box.marked[data-point="1"] {
  background: url(img/O.svg) center / 70% no-repeat;
}

.inner-box.marked[data-point="-1"] {
  background: url(img/X.svg) center / 70% no-repeat;
}

.crossline {
  animation: var(--line-animation) .25s ease forwards;
  background: var(--line-url) center / 114% no-repeat;
  height: var(--line-height);
  pointer-events: none;
  position: absolute;
  transition: filter .5s ease-in;
  width: calc(100% / 3);
}

.crossline.horizontal {
  --line-animation: scratchOrthogonally;
  --line-height: calc(100% / 9);
  --line-rotate: 0;
  --line-url: url(img/crossline_orthogonal.svg);
}

.crossline.vertical {
  --line-animation: scratchOrthogonally;
  --line-height: calc(100% / 9);
  --line-rotate: -90deg;
  --line-url: url(img/crossline_orthogonal.svg);
}

.crossline.diagonal {
  --line-animation: scratchDiagonally;
  --line-height: calc(100% / 3);
  --line-url: url(img/crossline_diagonal.svg);
}

.crossline.level-1 {
  --line-translateY: -100%;
}

.crossline.level-2 {
  --line-translateY: 0;
}

.crossline.level-3 {
  --line-translateY: 100%;
}

.crossline.primary {
  --line-rotate: 0;
}

.crossline.secondary {
  --line-rotate: 90deg;
}

.outer-sign {
  animation: swirlIn .25s .5s ease forwards;
  background: var(--sign-url) center / 80% no-repeat;
  height: calc(100% / 3);
  opacity: 0;
  pointer-events: none;
  position: absolute;
  width: calc(100% / 3);
}

.outer-sign.X {
  --sign-url: url(img/X_large.svg);
}

.outer-sign.O {
  --sign-url: url(img/O_large.svg);
}

[data-index="0"] .outer-sign {
  --x-to-center: 100%;
  --y-to-center: 100%;
}

[data-index="1"] .outer-sign {
  --x-to-center: 0;
  --y-to-center: 100%;
}

[data-index="2"] .outer-sign {
  --x-to-center: -100%;
  --y-to-center: 100%;
}

[data-index="3"] .outer-sign {
  --x-to-center: 100%;
  --y-to-center: 0;
}

[data-index="4"] .outer-sign {
  --x-to-center: 0;
  --y-to-center: 0;
}

[data-index="5"] .outer-sign {
  --x-to-center: -100%;
  --y-to-center: 0;
}

[data-index="6"] .outer-sign {
  --x-to-center: 100%;
  --y-to-center: -100%;
}

[data-index="7"] .outer-sign {
  --x-to-center: 0;
  --y-to-center: -100%;
}

[data-index="8"] .outer-sign {
  --x-to-center: -100%;
  --y-to-center: -100%;
}

.container.match-ended .outer-sign.winner {
  animation:  moveToCenter 1s cubic-bezier(0.63, 0, 0, 1) 1 forwards,
              pumpOut 1s 1s cubic-bezier(0.63, 0, 0, 1) 1 forwards;
}

.container.match-ended .outer-sign:not(.winner) {
  animation: fadeOut 1s cubic-bezier(0.63, 0, 0, 1) 1 forwards;
}

.container.match-ended .board.main-board {
  backdrop-filter: contrast(0.1) brightness(0.5);
}

.container.match-ended .board.inner-board,
.container.match-ended .crossline {
  filter: blur(10px) opacity(.5);
}

.winner-tag {
  font: 600 3rem / 1 Helvetica, Arial, sans-serif;
  left: 50%;
  letter-spacing: 20px;
  opacity: 0;
  position: absolute;
  text-transform: uppercase;
  top: 67%;
  transform: translate(-45.5%, -50%);
}

.container.match-ended .winner-tag {
  animation: swipeDown 1s 2s cubic-bezier(0.63, 0, 0, 1) 1 forwards;
}

.winner-tag.winner-X {
  color: var(--clr-X);
}

.winner-tag.winner-O {
  color: var(--clr-O);
}

.winner-tag.draw {
  color: hsl(0, 0%, 20%);
}

.container.match-ended * {
  /* cursor: initial; */
  pointer-events: none;
}

#restartBtn {
  background-color: hsl(0, 0%, 20%);
  border: none;
  border-radius: 8px;
  color: hsl(0, 0%, 100%);
  cursor: pointer;
  font: 400 1rem / 1 Helvetica, Arial, sans-serif;
  outline: none;
  padding: 8px 12px;
  transition: background-color .25s ease;
}

#restartBtn:hover {
  background-color: hsl(0, 0%, 30%);
}

.container.restart-match {
  animation:  bringForth 1s cubic-bezier(0.77, 0, 0.175, 1) 1 forwards,
              flipOnX 1s 1s cubic-bezier(0.77, 0, 0.175, 1) 1 forwards,
              bringForth 1s 2s cubic-bezier(0.77, 0, 0.175, 1) 1 reverse forwards;
}

.inner-board.restart-match {
  animation: flipOnY 1s cubic-bezier(0.77, 0, 0.175, 1) 1 forwards;
}

@keyframes scaleX {
  from { transform: scaleX(0); }
  to { transform: scaleX(1); }
}

@keyframes scaleY {
  from { transform: scaleY(0); }
  to { transform: scaleY(1); }
}

@keyframes swirlIn {
  from {
    opacity: 0;
    transform: scale(.5, .75) rotateX(30deg) rotateY(90deg) rotateZ(150deg);
  }

  to {
    opacity: 1;
    transform: scale(1) rotateX(0) rotateY(0) rotateZ(0);
  }
}

@keyframes scratchOrthogonally {
  from { transform: rotate(var(--line-rotate)) translateY(var(--line-translateY)) scale(0, 1); }
  to { transform: rotate(var(--line-rotate)) translateY(var(--line-translateY)) scale(1, 1); }
}

@keyframes scratchDiagonally {
  from { transform: rotate(var(--line-rotate)) scale(0, 0); }
  to { transform: rotate(var(--line-rotate)) scale(1, 1); }
}

@keyframes moveToCenter {
  from {
    z-index: 10;
    opacity: 1;
    transform: translate(0, 0);
  }

  to {
    opacity: 1;
    transform: translate(var(--x-to-center), var(--y-to-center));
  }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes pumpOut {
  from { transform: translate(var(--x-to-center), var(--y-to-center)) scale(1); }
  to { transform: translate(var(--x-to-center), var(--y-to-center)) scale(1.75); }
}

@keyframes swipeDown {
  from {
    opacity: 0;
    top: 67%;
  }

  to {
    opacity: 1;
    top: 80%;
  }
}

@keyframes bringForth {
  from {
    transform: translateZ(0);
  }

  to {
    transform: translateZ(700px);
  }
}

@keyframes flipOnX {
  from {
    transform: translateZ(700px) rotateX(0);
  }

  to {
    transform: translateZ(700px) rotateX(-360deg);
  }
}

@keyframes flipOnY {
  from {
    transform: rotateY(0);
  }

  to {
    transform: rotateY(-360deg);
  }
}